<?php

/**
 * Implements hook_block_info()
 */
function ob_blocks_block_info() {
  $blocks = array(
    'ob_create_vent' => array(
      'info' => t('Create Event'),
    ),
  );
  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function ob_blocks_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'ob_create_vent':
      $block['content'] = _ob_blocks_create_event();
    break;
  }
  return $block;
}


function ob_blocks_separate_room($nid){
  $output = '';
  $form = afb_get_add_block(1);
  return $output;
}

function _ob_blocks_clear_words($s) {
  $no_permitidas= array ("á","é","í","ó","ú","Á","É","Í","Ó","Ú","ñ","À","Ã","Ì","Ò","Ù","Ã™","Ã ","Ã¨","Ã¬","Ã²","Ã¹","ç","Ç","Ã¢","ê","Ã®","Ã´","Ã»","Ã‚","ÃŠ","ÃŽ","Ã”","Ã›","ü","Ã¶","Ã–","Ã¯","Ã¤","«","Ò","Ã","Ã„","Ã‹");
  $permitidas= array ("a","e","i","o","u","A","E","I","O","U","n","N","A","E","I","O","U","a","e","i","o","u","c","C","a","e","i","o","u","A","E","I","O","U","u","o","O","i","a","e","U","I","A","E");
  $texto = str_replace($no_permitidas, $permitidas ,$s);
  $s = str_replace(" ","_",$s);
  $s = strtolower($s);
  return $s;
}


function ob_blocks_block_view_alter(&$data, $block){
  if(isset($data['subject']) && $data['subject'] == 'event form'){
    $form = $data['content']['form'];
    $form['field_tipo_de_evento']['und']['#options']['_none'] = t('Seleccione un tipo de evento');
  }
}


function ob_blocks_form_alter(&$form, &$form_state, $form_id){
  if($form_id == 'event_node_form'){
    $form['field_tipo_de_evento']['und']['#options']['_none']='-- Seleccione un tipo de evento --';
    $form['ajax-submit']['#value'] = t('Crear Evento');
    $form['field_invitados']['und']['add_more']['#value'] = t('Añadir otro invitado');
  }
  if($form_id == 'room_event_node_form'){
    $form['field_tipo_de_evento']['und']['#options']['_none']='-- Seleccione un tipo de evento --';
    $form['ajax-submit']['#value'] = t('Solicitar');
    $form['field_invitados']['und']['add_more']['#value'] = t('Añadir otro invitado');
  } 
}

function ob_get_uid(){
  global $user;
  $uid = 1;
  if(isset($_GET['user'])){
    $usuario = $_GET['user'];
    if(array_key_exists(5, $user->roles)){
      $uid = $usuario;
    } else if(array_key_exists(6, $user->roles)){
      $load = user_load($usuario);
      if(!array_key_exists(5, $load->roles)) $uid = $usuario;
    } else if(array_key_exists(7, $user->roles)){
      $load = user_load($usuario);
      if(!array_key_exists(5, $load->roles) && !array_key_exists(5, $load->roles)) $uid = $usuario;
    }
  }else{
    $uid = $user->uid;
  } 
  return $uid;
}

function ob_get_uid_planner($uid){
  global $user;
  if(array_key_exists(5, $user->roles)) {
    return TRUE;
  } else {
    $load = user_load($uid);
    if(array_key_exists(6, $user->roles)){
      if(!array_key_exists(5, $load->roles)) return TRUE;
    } else if(array_key_exists(7, $user->roles)){
      if(!array_key_exists(5, $load->roles) && !array_key_exists(5, $load->roles)) return TRUE;
    }
  }
  return FALSE;
}