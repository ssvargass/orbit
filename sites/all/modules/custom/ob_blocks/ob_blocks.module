<?php
/**
 * Implements hook_block_info()
 */
function ob_blocks_block_info() {
  $blocks = array(
    'ob_create_vent' => array(
      'info' => t('Create Event'),
    ),
  );
  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function ob_blocks_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'ob_create_vent':
      $block['content'] = _ob_blocks_create_event();
    break;
  }
  return $block;
}


function ob_blocks_separate_room($nid){
  $output = '';
  $form = afb_get_add_block(1);
  return $output;
}

function _ob_blocks_clear_words($s) {
  $no_permitidas= array ("á","é","í","ó","ú","Á","É","Í","Ó","Ú","ñ","À","Ã","Ì","Ò","Ù","Ã™","Ã ","Ã¨","Ã¬","Ã²","Ã¹","ç","Ç","Ã¢","ê","Ã®","Ã´","Ã»","Ã‚","ÃŠ","ÃŽ","Ã”","Ã›","ü","Ã¶","Ã–","Ã¯","Ã¤","«","Ò","Ã","Ã„","Ã‹");
  $permitidas= array ("a","e","i","o","u","A","E","I","O","U","n","N","A","E","I","O","U","a","e","i","o","u","c","C","a","e","i","o","u","A","E","I","O","U","u","o","O","i","a","e","U","I","A","E");
  $texto = str_replace($no_permitidas, $permitidas ,$s);
  $s = str_replace(" ","_",$s);
  $s = strtolower($s);
  return $s;
}


function ob_blocks_block_view_alter(&$data, $block){
  if(isset($data['subject']) && $data['subject'] == 'event form'){
    $form = $data['content']['form'];
    $form['field_tipo_de_evento']['und']['#options']['_none'] = t('Seleccione un tipo de evento');
  }
}


function ob_blocks_form_alter(&$form, &$form_state, $form_id){
  if($form_id == 'user_profile_form'){
    global $user;
    if($form['#user']->uid == $user->uid){
      if(isset($form['#user']->picture)){
        drupal_set_message(t('No tiene autorización de ingresar.'));
        drupal_goto('');
      }
    }
  }
  if($form_id == 'event_node_form'){
    $form['field_tipo_de_evento']['und']['#options']['_none']='-- Seleccione un tipo de evento --';
    $form['ajax-submit']['#value'] = t('Crear Evento');
    $form['field_invitados']['und']['add_more']['#value'] = t('Añadir otro invitado');
  }
  if($form_id == 'room_event_node_form'){
    $form['field_tipo_de_evento']['und']['#options']['_none']='-- Seleccione un tipo de evento --';
    $form['ajax-submit']['#value'] = t('Solicitar');
    $form['field_invitados']['und']['add_more']['#value'] = t('Añadir otro invitado');
    $form['field_fecha']['#prefix'] = l(t('Ver disponibilidad'), 'disponibilidad_sala/nid' , 
      array(
        'attributes' => array(
          'class' => array('colorbox-load', 'colorbox_custom')
        ),
        'query' => array(
          'width' => 500,
          'height' => 500,
          'iframe' => TRUE
        )
      )
    );
    unset($form['ajax-submit']['#ajax']);
  } 
  if($form_id == 'views_exposed_form' && $form['#id'] ==  'views-exposed-form-directorio-page'){
    $form['#action'] = '/directorio';
  }
}

function ob_get_uid(){
  global $user;
  $uid = 1;
  if(isset($_GET['user'])){
    $usuario = $_GET['user'];
    if(array_key_exists(5, $user->roles)){
      $uid = $usuario;
    } else if(array_key_exists(6, $user->roles)){
      $load = user_load($usuario);
      if(!array_key_exists(5, $load->roles)) $uid = $usuario;
    } else if(array_key_exists(7, $user->roles)){
      $load = user_load($usuario);
      if(!array_key_exists(5, $load->roles) && !array_key_exists(5, $load->roles)) $uid = $usuario;
    }
  }else{
    $uid = $user->uid;
  } 
  return $uid;
}

function ob_get_uid_planner($uid){
  global $user;
  if(array_key_exists(5, $user->roles)) {
    return TRUE;
  } else {
    $load = user_load($uid);
    if(array_key_exists(6, $user->roles)){
      if(!array_key_exists(5, $load->roles)) return TRUE;
    } else if(array_key_exists(7, $user->roles)){
      if(!array_key_exists(5, $load->roles) && !array_key_exists(5, $load->roles)) return TRUE;
    }
  }
  return FALSE;
}


/**
 * Implements hook_user_login()
 */

function ob_blocks_user_login(&$edit, $account){
  if(_ob_blocks_create_comp($account)){
    _ob_blocks_create_event($account);
  }
}

function _ob_blocks_create_event($user){
  $node = new stdClass();
  $node->title = t("Cumpleaños ") . $user->field_nombre_completo['und'][0]['value'];
  $node->type = "event";
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;
  $node->uid = 1;
  $node->status = 1; 
  $node->promote = 0;
  $node->comment = 1;
  $node->field_tipo_de_evento[$node->language][]['tid'] = 24;
  $node->field_cumple_uid[$node->language][]['value'] = $user->uid;

  $cumple = $user->field_cumplea_os['und'][0]['value'];
  $cum_str = strtotime($cumple);
  $dia = date('j', $cum_str);
  $mes = date('n', $cum_str);
  $hoy = date('Y');
  $manana = $hoy + 5;
  $fecha = array();
  for ($i=$hoy; $i < $manana ; $i++) { 
    $fecha[] = array(
      'value' => $i.'-'.$mes.'-'.$dia.'T05:00:00',
      'value2' => $i.'-'.$mes.'-'.$dia.'T05:00:00',
      'rrule' => 'RRULE:FREQ=YEARLY;INTERVAL=1;BYMONTH='.$mes.';BYMONTHDAY='.$dia.';COUNT=5;WKST=SU',
      'timezone' => 'America/Bogota',
      'timezone_db' => 'UTC',
      'date_type' => 'date',
    );
  }
  $node->field_fecha[$node->language] = $fecha;
  $node = node_submit($node);
  node_save($node);
}

function _ob_blocks_create_comp($user){
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'event')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_cumple_uid', 'value', $user->uid, '=');
  $result = $query->execute();
  if (isset($result['node'])) {
    return FALSE;
  }
  return TRUE;
}











