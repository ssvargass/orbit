<?php


/**
 * Implements hook_menu().
 */
function ob_wall_menu() {
  $items['admin/config/orbit'] = array(
    'title' => 'Orbit',
    'description' => 'Settings for orbit modules.',
    'position' => 'left',
    'weight' => -10,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/orbit/phrase'] = array(
    'title' => 'Phrase Config',
    'description' => 'Configuración de la frase de muro',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ob_wall_phrase'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements hook_block_info()
 */
function ob_wall_block_info() {
  $blocks = array(
    'ob_create_post' => array(
      'info' => t('Wall'),
    ),
    'ob_phrase' => array(
      'info' => t('Phrase'),
    ),
    'ob_links' => array(
      'info' => t('Links'),
    ),
    'ob_profile' => array(
      'info' => t('Profile'),
    ),
  );
  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function ob_wall_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'ob_create_post':
      $block['content'] = drupal_get_form('og_wall_form');
    break;
    case 'ob_phrase':
      $block['content'] = ob_wall_print_phrase();
    break;
    case 'ob_links':
      $block['content'] = ob_wall_print_links();
    break;
    case 'ob_profile':
      $block['content'] = ob_wall_print_profile();
    break;
  }
  return $block;
}

function og_wall_form($form, &$form_state){
  drupal_add_js(drupal_get_path('module', 'ob_wall') .'/js/ob_wall.js', 'file');

  $form['texto'] = array(
    '#title' => t('Publicación'),
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('ob_text', 's_add_file'),
    ),
  );

  $form['texto']['head'] = array(
    '#markup' => '<h3 class="ob_wall_head">' . t('Publicación') . '</h3>',
  );
  $form['texto']['text'] = array(
    '#title' => '',
    '#type' => 'textarea',
  );
  
  $form['actions'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array('ob_actions',),
    ),
  );

  $form['actions']['archivo'] = array(
    '#title' => '',
    '#type' => 'managed_file',
    '#description' => t('Se pueden subir archivos de formatos pdf, doc, docx, png, gif, jpg, jpeg'),
    '#upload_location' => 'public://wall/',
     '#upload_validators' => array('file_validate_extensions' => array('pdf doc docx png gif jpg jpeg')),
  );

  $options = ob_wall_get_dept('departamento');

  $form['actions']['permissions'] = array(
    '#type' => 'select',
    '#title' => '',
    '#options' => $options,
    '#ajax' => array(
      'callback' => 'ob_wall_get_directory',
      'prevent' => 'click',
    ),
  );

  $form['actions']['enviar'] =  array(
    '#type' => 'submit',
    '#value' => t('Publicar')
  );

  $form['actions']['specific'] = array(
    '#type' => 'hidden',
    '#attributes' => array(
        'class' => array('s_specific')
      )
  );

  return $form;
}

function ob_wall_get_directory($form, &$form_state){
  $commands = array();
  $permision = $form_state['values']['permissions'];

  $commands[] = ajax_command_invoke('', 'ob_wall_directory_clear');

  if($permision == 'specific') {
    $commands[] = ajax_command_invoke('', 'ob_wall_directory',array(array('inline' => 'true', 'href' => '#block-views-directorio-block-1' ,'width' => 500,'height' => 400,)));
  }
  return array('#type' => 'ajax', '#commands' => $commands);
}

function og_wall_form_submit($form, &$form_state){
  $counter = variable_get('ob_wall_counter', 1);
  $counter ++;

  global $user;
  $node = new stdClass();
  $node->type = 'ob_wall';
  $node->title = 'public_' . $counter;
  $node->language = LANGUAGE_NONE;
  $node->uid = $user->uid;
  $node->name = $user->name;
  node_object_prepare($node);

  $none = TRUE;
  
  if($form_state['values']['text'] != ''){
    $node->body['und'][0]['value'] = trim($form_state['values']['text']);
    $node->format = 'plain_text';
    $none = FALSE;
  }

  if($form_state['values']['archivo'] != 0){
    $archivo = file_load($form_state['values']['archivo']);
    $archivo->status = 1;
    $archivo->display = 1;
    file_save($archivo);
    $node->field_archivo['und'][0] = (array) $archivo;
    $none = FALSE;
  }

  if($none){
    drupal_set_message(t('Debe completar al menos un campo'), 'error');
    return FALSE;
  }

  $permissions = array();

  if ($form_state['values']['permissions'] == 'specific') {
    $permissions[] = $form_state['values']['specific'];
  } else {
    $permissions[] = $form_state['values']['permissions'];
  }

  foreach ($permissions as $key => $value) {
    $node->field_permissions['und'][$key]['value'] = $value;
  }
  # code...
  node_save($node);
  variable_set('ob_wall_counter', $counter);
  drupal_set_message(t('Se ha generado la publicación'));
}


function ob_wall_get_dept($machine_name){
  $v = taxonomy_vocabulary_machine_name_load($machine_name);
  $terms = taxonomy_get_tree($v->vid);
  
  $options = array(
    'public' => t('Público'),
    'friend_group' => t('Grupo de colegas'),
    'specific' => t('Colega'),
  );
  foreach ($terms as $term => $value) {
    $options['term_' . $value->tid] = $value->name;
  }
  return ($options);
}




function ob_wall_tiempo_transcurrido($fecha) {
  if(empty ($fecha)) {
    return "No hay fecha";
  }
 
  $intervalos = array (t("segundo"), t("minuto"), t("hora"), t("dí­a"), t("semana"), t("mes"), t("año"));
  $duraciones = array ("60","60","24","7","4.35","12");
 
  $ahora = time ();
  $Fecha_Unix = $fecha;
 
  if(empty ($Fecha_Unix)) {  
    return t("Fecha incorrecta");
  }

  if($ahora > $Fecha_Unix) {  
    $diferencia     = $ahora - $Fecha_Unix;
    $tiempo         = t("Hace");
  } else {
    $diferencia     = $Fecha_Unix - $ahora;
    $tiempo         = t("Dentro de");
  }
  for($j = 0; $diferencia >= $duraciones[$j] && $j < count ($duraciones)-1; $j++) {
    $diferencia /= $duraciones[$j];
  }
 
  $diferencia = round ($diferencia);
 
  if($diferencia != 1) {
    $intervalos[5].="e"; //meses... la magia del español
    $intervalos[$j].= "s";
  }
 
  return "$tiempo $diferencia $intervalos[$j]";
}


function ob_wall_phrase($form, &$form_state){

  $form['ob_wall_phrase'] = array(
    '#type' => 'textarea',
    '#title' => t('Wall phrase'),
    '#default_value' => variable_get('ob_wall_phrase', ''),
    '#description' => t('Frase a mostrar en el home'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}


function ob_wall_print_phrase(){
  return variable_get('ob_wall_phrase', '');
}


function ob_wall_print_links(){
  $content = array();

  $content['links_header'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_header_links')),
    ),
  );

  $content['links_header']['time'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => date('g:i a'),
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_time'))
    ),
  );

  $dia = t(date('l'));
  $d_a = t(date('d'));
  $mes = t(date('F'));
  $a_o = t(date('Y'));


  $content['links_header']['date'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => $dia . ' ' . $d_a . ' de ' . $mes . ' de ' . $a_o,
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_date'))
    ),
  );


  $content['links_header']['notifications'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_notifications'))
    ),
  );

  /*$content['links_header']['profile'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => l(t('Profile'),''),
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_profile'))
    ),
  );*/

  $content['links_header']['logout'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => l(t('Logout'),'user/logout'),
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_logout'))
    ),
  );


  return $content;
}


function ob_wall_print_profile(){
  global $user;
  $usuario = user_load($user->uid);

  $content = array();

  $image_path = (count($usuario->picture) > 0) ? $usuario->picture->uri : 'Avatar.png';
  $user_image = theme_image_style(array(
    'style_name' => 'profile_image',
    'path'    => $image_path,
    'width'   => false,
    'height'  => false,
  ));

  $content['links_header'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_content_profile'))
    ),
  );

  $content['links_header']['image'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => $user_image,
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_user_img'))
    ),
  );

  $content['links_header']['user_info'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_user_info'))
    ),
  );

  if(count($usuario->field_nombre_completo) > 0) {
    $content['links_header']['user_info']['name'] = array(
      '#type' => 'html_tag',
      '#tag' => 'h3',
      '#value' => $usuario->field_nombre_completo['und'][0]['value'],
      '#attributes' => array(
        'class' => array(drupal_html_class('ob_name'))
      ),
    );
  }

  if(count($usuario->field_departamento) > 0) {
    $content['links_header']['user_info']['depto'] = array(
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#value' => $usuario->field_departamento['und'][0]['value'],
      '#attributes' => array(
        'class' => array(drupal_html_class('ob_depto'))
      ),
    );
  }

  if(count($usuario->field_cargo) > 0) {
    $content['links_header']['user_info']['cargo'] = array(
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#value' => $usuario->field_cargo['und'][0]['value'],
      '#attributes' => array(
        'class' => array(drupal_html_class('ob_cargo'))
      ),
    );
  }

  if(count($usuario->field_tel_fono) > 0) {
    $content['links_header']['user_info']['phone'] = array(
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#value' => $usuario->field_tel_fono['und'][0]['value'],
      '#attributes' => array(
        'class' => array(drupal_html_class('ob_phone'))
      ),
    );
  }

  if(count($usuario->mail) > 0) {
    $content['links_header']['user_info']['mail'] = array(
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#value' => $usuario->mail,
      '#attributes' => array(
        'class' => array(drupal_html_class('ob_mail'))
      ),
    );
  }

  if(count($usuario->field_cumplea_os) > 0) {
    $time = strtotime($usuario->field_cumplea_os['und'][0]['value']);
    $mes = date('F',$time);
    $content['links_header']['user_info']['birth'] = array(
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#value' => date('d',$time) . ' de ' . t($mes),
      '#attributes' => array(
        'class' => array(drupal_html_class('ob_birth'))
      ),
    );
  }


  if(count($usuario->field_rh) > 0) {
    $content['links_header']['user_info']['rh'] = array(
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#value' => $usuario->field_rh['und'][0]['value'],
      '#attributes' => array(
        'class' => array(drupal_html_class('ob_rh'))
      ),
    );
  }

  $colaborators = '<div class="s_title_block">' . t('Colegas') . '</div>';
  $colaborators .= views_embed_view('colaboradores');

  $content['links_header']['colaborator'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => $colaborators,
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_colaborator'))
    ),
  );

  $content['close'] = array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => t('close'),
    '#attributes' => array(
      'class' => array(drupal_html_class('ob_close'))
    ),
  );

  return $content;
}

function _ob_wall_filterer($nid){
  global $user;
  $node = node_load($nid);
  $uid = $user->uid;
  $permission = $node->field_permissions['und'][0]['value'];
  if($permission == 'public') return FALSE;
  if($uid != $node->uid){
    if($permission == 'friend_group'){
      $flag = flag_get_user_flags('user', NULL, $node->uid);
      if(count($flag) > 0){
        $friends = (array) $flag['friends'];
        if (in_array($uid, array_keys($friends))){
          return FALSE;
        }
      }
    } else {
      $speci = explode('specific=', $permission);
      if(count($speci) > 1){
        $usuarios = explode(',', $speci[1]);
        foreach ($usuarios as $key => $value) {
          if($uid == $value) return FALSE;
        }
      } else {
        $usuario = user_load($uid);
        $departamento = $usuario->field_departamento['und'][0]['value'];
        $term = str_replace('term_','',$permission);
        $taxo = taxonomy_term_load($term);
        if($taxo->name == $departamento) return FALSE;
      }
    }
    return TRUE;
  }
  
}


function _ob_wall_shared($entity){
  $permission = $entity->field_permissions['und'][0]['value'];
  if($permission == 'public') return t('Público');
  if($permission == 'friend_group') return t('Grupo colegas');

  $term = explode('term_', $permission);
  $output = '';
  if(count($term) > 1){
    $taxo = taxonomy_term_load($term[1]);
    $output = $taxo->name;
  } else {
    $speci = explode('specific=', $permission);
    if(count($speci) > 1){
      $usuarios = explode(',', $speci[1]);
      $options = array();
      $users = user_load_multiple($usuarios);
      foreach ($users as $key => $value) {
        $options[] = $value->field_nombre_completo['und'][0]['value'];
      }
      $output = array(
        '#type' => 'select',
        '#title' => '',
        '#options' => $options,
        '#ajax' => array(
          'callback' => 'ob_wall_get_directory',
          'prevent' => 'click',
        ),
      );
      $output = render($output);
    } 
  }
  return $output;
}




