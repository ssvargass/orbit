<?php

function ob_room_theme($existing, $type, $theme, $path) {  
  return array(
    'author' => array(
      'template' => 'author',
      'path' => $path . '/templates',
      'variables' => array(
        'node' => NULL,
      ),
    ),
    'invitado' => array(
      'template' => 'invitado',
      'path' => $path . '/templates',
      'variables' => array(
        'node' => NULL,
      ),
    ),
  );   
}
/**
 * Implements hook_permission().
 */
function ob_room_permission() {
  return array(
    'administrate_room' => array(
      'title' => t('Administrate Room'),
      'description' => t('Administrate room'),
    ),
  );
}

function ob_room_separate($form, &$form_state, $nid){
  $form_state['custom']['nid'] = $nid;
  $form['denegate'] = array(
    '#type' => 'submit',
    '#value' => t('Rechazar'),
    '#ajax' => array(
      'callback' => '_ob_room_callback',
    )
  );
  $form['acept'] = array(
    '#type' => 'submit',
    '#value' => t('Aceptar'),
    '#ajax' => array(
      'callback' => '_ob_room_callback',
    )
  );
  return $form;  
}

function _ob_room_callback($form, $form_state) {
  $commands = array();
  $nid = $form_state['custom']['nid'];
  if($form_state['clicked_button']['#value'] == 'Rechazar'){
    $formulario = drupal_get_form('ob_room_denegate', $nid);
    $commands[] = ajax_command_replace('.view-salas-event', render($formulario));
  } else {
    $node = node_load($nid);
    $node->status = 1;
    node_save($node);
    $commands[] = ajax_command_invoke('', 'ob_room_reload');
    drupal_set_message('Se ha actualizado');
  }
  return array('#type' => 'ajax', '#commands' => $commands);  
}

function ob_room_denegate($form, &$form_state, $nid){
  $form_state['custom']['nid'] = $nid;
  $form['header'] = array(
    '#markup' => t('RESPUESTA'),
  );
  $form['text'] = array(
    '#type' => 'textarea',
    '#title' => t('Su sala no fue agendada por:'),
  );

  $form['responce'] = array(
    '#type' => 'submit',
    '#value' => t('Responder'),
    '#ajax' => array(
      'callback' => '_ob_room_callback_delete',
    )
  );
  return $form;  
}

function _ob_room_callback_delete($form, $form_state) {
  $commands = array();
  $nid = $form_state['custom']['nid'];
  $respuesta = t('Se ha cancelado y notificado la reserva.');
  node_delete($nid);
  $commands[] = ajax_command_replace('#ob-room-denegate', $respuesta);
  return array('#type' => 'ajax', '#commands' => $commands);  
}

function ob_room_node_submit($node, $form, &$form_state){
  if($node->type == 'event'){
    $_SESSION['custom'] = $node;
    $creador = $node->uid;
    $invitados = $node->field_invitados['und'];
    $creador = user_load($creador);
    $inv = array();
    foreach ($invitados as $key => $value) {
      $inv[] = $value['target_id'];
    }

    $node->invitados = user_load_multiple($inv);

    foreach ($node->invitados as $key => $value) {
      $invitado = theme('invitado', array(
        'node' => $node, 
      ));
      ob_room_send_mail($value->mail, t('Ha sido invitado al evento ') . $node->title, $invitado);
    }

    $author = theme('author', array(
      'node' => $node, 
    ));

    ob_room_send_mail($creador->mail, t('Ha creado el evento ') . $node->title, $author);
  }
}

function ob_room_send_mail($email, $subject, $body){
  $module = 'ob_notifications';
  $key = 'create_event';
  $language = language_default();
  $params = array();
  $from = NULL;
  $send = FALSE;
  $message = drupal_mail($module, $key, $email, $language, $params, $from, $send);
  $message['subject'] = $subject;
  $message['body'] = array();
  $message['body'][] = $body;
  // Retrieve the responsible implementation for this message.
  $system = drupal_mail_system($module, $key);
  // Format the message body.
  $message = $system->format($message);
  // Send e-mail.
  $message['result'] = $system->mail($message);
}


?>